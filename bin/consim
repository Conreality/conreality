#!/usr/bin/env python3
# This is free and unencumbered software released into the public domain.

try:
  import conreality
except ImportError:
  import os, sys
  sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..', 'src', 'python')))
  import conreality

from conreality import ddk, sdk
from conreality.ddk.sysexits import EX_NOINPUT, EX_OK
import os

class Program(ddk.Program):
  """Conreality node simulator."""

  class ArgumentParser(ddk.ArgumentParser):
    def init(self):
      self.add_argument('script', nargs='?', default='/dev/stdin',
        help='the scenario script to run (default: stdin)')

  def __init__(self, **kwargs):
    super().__init__(**kwargs)
    assert self.options.script
    self.context = sdk.scripting.Context()
    self.context.prepend_package_path(os.path.join(os.path.dirname(__file__), '..', 'src', 'lua', '?.lua'))
    self.context.load_sdk()

  def run(self):
    try:
      self.context.load_file(self.options.script)
    except FileNotFoundError as error:
      print("Failed to load script:", error, file=sys.stderr)
      return EX_NOINPUT
    return EX_OK

if __name__ == '__main__':
  import sys
  with Program(argparser=Program.ArgumentParser) as program:
    sys.exit(program.run())
